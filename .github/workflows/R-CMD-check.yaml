on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.6'}
          - {os: macOS-latest, r: '3.6'}
          - {os: macOS-latest, r: 'devel'}
          - {os: ubuntu-16.04, r: '3.2', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.3', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.4', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.5', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-16.04, r: '3.6', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "install.packages(c('knitr','BiocManager','devtools'))"
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          Rscript -e "BiocManager::install(c('DNAcopy','GenomeInfoDb','BSgenome.Hsapiens.UCSC.hg19'))"
          Rscript -e "setRepositories(ind=c(1:2)); devtools::install('.', dependencies=TRUE, repos = BiocManager::repositories())"
          sudo apt-get install libgsl-dev
      - name: Install dependencies
        run: |
          setRepositories(ind=c(1:2))
          if (!require("BiocManager", character.only = TRUE)) {
          install.packages("BiocManager")
          }
          if (!require("pwr", character.only = TRUE)) {
          install.packages("pwr")
          }
          preinstall_packages = c('DNAcopy','GenomeInfoDb','BSgenome.Hsapiens.UCSC.hg19')
          package.check2 <-lapply(preinstall_packages, FUN = function(x) {    
          if (!require(x, character.only = TRUE)) {
          BiocManager::install(x, dependencies = TRUE)
          library(x, character.only = TRUE)
          }
          })
          search()
          remotes::install_github("jamesdalg/CNVScope")
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == '3.6'
        run: covr::codecov()
        shell: Rscript {0}